import pandas as pd
import numpy as np
from statsmodels.stats.weightstats import _tconfint_generic as t_stat
from scipy.stats import norm 
import math

1. Известно, что генеральная совокупность распределена нормально со средним квадратическим отклонением, равным 16. 
Найти доверительный интервал для оценки математического ожидания a с надежностью 0.95, если выборочная средняя M = 80, а объем выборки n = 256.

mean_std = np.sqrt(16) / 256
t_stat(80, mean_std,256 - 1, 0.05, 'two-sided')
(79.96922952234611, 80.03077047765389)

2.В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью, получены опытные данные:
6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1 Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей,
оценить истинное значение величины X при помощи доверительного интервала, покрывающего это значение с доверительной вероятностью 0,95.

X = np.array([6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1])
mean_X = X.mean()
std_X = X.std(ddof=1)
mean_std_X = std_X / (np.sqrt(len(X)))
t_stat(mean_X, mean_std_X,len(X) - 1, 0.05, 'two-sided')
(6.267515851415713, 6.912484148584288)

3.Утверждается, что шарики для подшипников, изготовленные автоматическим станком, имеют средний диаметр 17 мм. Используя односторонний критерий с α=0,05,
проверить эту гипотезу, если в выборке из n=100 шариков средний диаметр оказался равным 17.5 мм, а дисперсия известна и равна 4 мм.

H0: M = 7

H1: M > 17

U_fact = (17.5 - 17) / 4 * np.sqrt(100)
U_fact
1.25
Ф(U_cr) = 1.645
т.к. U_fact < U_cr Нулевая гипотеза принимается

4. Продавец утверждает, что средний вес пачки печенья составляет 200 г. Из партии извлечена выборка из 10 пачек. 
Вес каждой пачки составляет: 202, 203, 199, 197, 195, 201, 200, 204, 194, 190. Известно, что их веса распределены нормально.
Верно ли утверждение продавца, если учитывать, что доверительная вероятность равна 99%?

H0: M = 200

H1: M != 200

X = np.array([202, 203, 199, 197, 195, 201, 200, 204, 194, 190])
mean_X = X.mean()
std_X = X.std(ddof=1)
t_fact = (mean_X - 200) / std_X * np.sqrt(10)
t_fact
-1.0651074037450896
t_cr = 3.25
т.к. abs(t_fact) < t_cr нулевая гипотеза принимается
